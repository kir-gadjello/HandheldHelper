// AUTO GENERATED FILE, DO NOT EDIT.
// 
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;
/// Holds bindings to LLama RPC server.
class LLamaRPC{
/// Holds the symbol lookup function.
final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

/// The symbols are looked up in [dynamicLibrary].
LLamaRPC(ffi.DynamicLibrary dynamicLibrary): _lookup = dynamicLibrary.lookup;

/// The symbols are looked up with [lookup].
LLamaRPC.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup): _lookup = lookup;

int init(
  ffi.Pointer<ffi.Char> cmd,
) {
return _init(
    cmd,
  );
}
late final _initPtr = _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Char> )>>('init');
late final _init = _initPtr.asFunction<int Function(ffi.Pointer<ffi.Char> )>();

ffi.Pointer<ffi.Char> json_rpc(
  ffi.Pointer<ffi.Char> method,
  ffi.Pointer<ffi.Char> path,
  ffi.Pointer<ffi.Char> headers,
  ffi.Pointer<ffi.Char> body,
) {
return _json_rpc(
    method,
    path,
    headers,
    body,
  );
}
late final _json_rpcPtr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char> , ffi.Pointer<ffi.Char> , ffi.Pointer<ffi.Char> , ffi.Pointer<ffi.Char> )>>('json_rpc');
late final _json_rpc = _json_rpcPtr.asFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char> , ffi.Pointer<ffi.Char> , ffi.Pointer<ffi.Char> , ffi.Pointer<ffi.Char> )>();

ffi.Pointer<ffi.Char> get_completion(
  ffi.Pointer<ffi.Char> req_json,
) {
return _get_completion(
    req_json,
  );
}
late final _get_completionPtr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char> )>>('get_completion');
late final _get_completion = _get_completionPtr.asFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char> )>();

void deinit(
) {
return _deinit(
  );
}
late final _deinitPtr = _lookup<ffi.NativeFunction<ffi.Void Function()>>('deinit');
late final _deinit = _deinitPtr.asFunction<void Function()>();

}

